<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
version="EE-3.5.2" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd">
    <data-mapper:config name="XML_To_Opportunity" transformationGraphPath="xml_to_opportunity.grf" doc:name="XML_To_Opportunity"/>
    <flow name="triggerPushFlow" doc:name="triggerPushFlow" initialState="started">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" contentType="text/xml" doc:name="HTTP"/>
        <choice doc:name="Trigger Policy">
            <when expression="#['push' == '${trigger.policy}']">
                <object-to-string-transformer doc:name="Object to String"/>
                <logger message="Message from outbound : #[payload]" level="INFO" doc:name="Log input payload"/>
                <data-mapper:transform config-ref="XML_To_Opportunity" doc:name="XML To Opportunity"/>
                <flow-ref name="mainFlow" doc:name="trigger mainFlow"/>
            </when>
            <otherwise>
                <logger message="Trigger policy has been set to POLL. Sikpping this message" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <set-payload value="&lt;soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:out='http://soap.sforce.com/2005/09/outbound'&gt;&lt;soapenv:Header/&gt;&lt;soapenv:Body&gt;&lt;out:notificationsResponse&gt;&lt;out:Ack&gt;true&lt;/out:Ack&gt;&lt;/out:notificationsResponse&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;" doc:name="Set response body"/>
        <http:response-builder status="200" contentType="application/xml" doc:name="build Http response"/>
    </flow>

	<!-- 	In this file you should declare all your inbound endpoints and from here control the access to your application -->

    <flow name="triggerFlow" processingStrategy="synchronous"   doc:name="triggerFlow" doc:description="This is the simpliest entry point to start the excecution of your Template
Here you should: 
	* Configure the inbound endpoint, in this case a polling to fetch data from origin system
	* Handle any input parameter and set the scope of it so the main logic does not care from where it is called
Here you should not: 
	* Run validations against external systems
	* Choose flow of you application based on input parameters">
    	<poll doc:name="fireup Opportunity synchronization">
            <fixed-frequency-scheduler frequency="${poll.frequencyMillis}" startDelay="${poll.startDelayMillis}" />
            <watermark variable="lastQueryDate" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
             <sfdc:query config-ref="SalesforceA" doc:name="query Opportunities with filtering criteria from Salesforce Instance A" query="SELECT LastModifiedDate, Name, Amount, StageName, Probability, CloseDate, Type, Account.Id, Account.Name, Account.AccountNumber, Account.AccountSource, Account.AnnualRevenue, Account.BillingCity, Account.BillingCountry, Account.BillingPostalCode, Account.BillingState, Account.BillingStreet, Account.Description, Account.Fax, Account.Industry, Account.NumberOfEmployees, Account.Ownership, Account.ParentId, Account.Phone, Account.Rating, Account.ShippingCity, Account.ShippingCountry, Account.ShippingPostalCode, Account.ShippingState, Account.ShippingStreet, Account.Sic, Account.SicDesc, Account.Site, Account.TickerSymbol, Account.Type, Account.Website FROM Opportunity WHERE LastModifiedDate &gt; #[lastQueryDate] AND Amount &gt; 5000">
            </sfdc:query>
        </poll>
        <logger message="#[payload]" level="INFO" doc:name="log Opportunities  to be created/updated"/>
        <choice doc:name="Trigger Policy">
            <when expression="#['poll' == '${trigger.policy}']">
                <flow-ref name="mainFlow" doc:name="trigger mainFlow"/>
            </when>
            <otherwise>
                <logger message="Trigger policy has been set to PUSH. Skipping this message." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
    
</mule>

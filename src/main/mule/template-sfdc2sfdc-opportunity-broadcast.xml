<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	
	<os:object-store name="watermarkStore" persistent="true"/>
	
	<salesforce:sfdc-config name="Salesforce_Sfdc_A_config"
		doc:name="Salesforce Sfdc config" doc:id="38a0808d-8f32-4c87-a763-4db431b3c4cd">
		<salesforce:basic-connection username="${sfdc.a.username}"
			password="${sfdc.a.password}" securityToken="${sfdc.a.securityToken}" />
	</salesforce:sfdc-config>
	<salesforce:sfdc-config name="Salesforce_Sfdc_B_config"
		doc:name="Salesforce Sfdc config" doc:id="3d4eabb0-83f2-4e02-97e1-77c5417347f7">
		<salesforce:basic-connection username="${sfdc.b.username}"
			password="${sfdc.b.password}" securityToken="${sfdc.b.securityToken}" />
	</salesforce:sfdc-config>
	<configuration-properties file="common.properties"
		doc:name="Configuration properties" doc:id="523e4eea-d00f-4213-bde7-a2764a635851" />
	<configuration-properties file="mule.${mule.env}.properties" doc:name="Configuration properties" doc:id="7115a17b-4a67-4607-8a7c-e8f91b0737de" />
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="4b7df0c7-b328-48d9-a039-b56957e8d891" >
		<http:listener-connection host="0.0.0.0" port="${http.port}" />
	</http:listener-config>

	<flow name="pushFlow" doc:id="92a761dd-0887-4a02-afd2-cf692c361572" >
		<http:listener doc:name="Listener" doc:id="ab6f4fa1-c65c-4c6c-9a5f-df4981046c72" config-ref="HTTP_Listener_config" path="/" allowedMethods="POST"/>
		<choice doc:name='Trigger Policy' doc:id="5dd46525-a92a-4597-9ce5-68c054417509" >
			<when expression="#['push' == '${trigger.policy}']" >
				<logger level="INFO" doc:name="Log input payload" doc:id="682408f2-952f-4291-b59c-aaf7ca55b1be" message="#['Message from outbound: ' ++ write(payload, 'application/xml')]" />
				<ee:transform doc:name="XML To Opportunity" doc:id="319ace93-f407-4cbc-9bb3-51d89021f6ff" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.Envelope.Body.notifications.Notification.*sObject]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="businessLogicFlow" doc:id="a6d7734e-bc60-41cc-ad58-5ec889c92665" name="businessLogicFlow" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Log - message has been skipped" doc:id="93bbbb8d-2cd9-4ee0-aa20-2f6caf49970c" message="Trigger policy has been set to POLL. Skipping this message." />
			</otherwise>
		</choice>
		<set-payload value="&lt;soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:out='http://soap.sforce.com/2005/09/outbound'&gt;&lt;soapenv:Header/&gt;&lt;soapenv:Body&gt;&lt;out:notificationsResponse&gt;&lt;out:Ack&gt;true&lt;/out:Ack&gt;&lt;/out:notificationsResponse&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;" doc:name="Set response body" doc:id="3d42a4e8-4fd8-4266-9253-484410fab7c2" mimeType="application/xml"/>
	
</flow>
	<flow name="schedulerFlow" doc:id="5995b3d7-46ed-452b-ac66-b270f17d4161" >
		<scheduler doc:name="Scheduler" doc:id="91e56b5f-3b73-4475-bc0e-3beb213ad932" >
			<scheduling-strategy >
				<fixed-frequency frequency="${scheduler.frequency}" startDelay="${scheduler.startDelay}"/>
			</scheduling-strategy>
		</scheduler>
		<choice doc:name='Trigger Policy' doc:id="edaf6494-5718-4a75-b0ce-c3af7b798ae4" >
			<when expression="#['poll' == '${trigger.policy}']" >
				<flow-ref doc:name="sfdcQueryFlow" doc:id="ada07859-8839-4751-9623-68a08d31a472" name="sfdcQueryFlow"/>
				<logger level="INFO" doc:name="Log Opportunities  to sync" doc:id="65934ef1-2939-4fab-bde9-1886331527ea" message="#['Opportunity objects to sync: ' ++ write(payload)]" />
				<flow-ref doc:name="businessLogicFlow" doc:id="7011798d-d6e9-461b-9d4c-9f7746bf3d68" name="businessLogicFlow"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Log - message has been skipped" doc:id="ca9188e4-acac-4a48-91c4-6a8ecdd5cde3" message="Trigger policy has been set to PUSH. Skipping this message."/>
			</otherwise>
		</choice>
		
	</flow>	
	<flow name="sfdcQueryFlow">
		<os:retrieve key="watermark" objectStore="watermarkStore" target="lastQueryTimestamp" doc:name="Retrieve lastQueryTimestamp">
        <os:default-value><![CDATA[${watermark.default.expression}]]></os:default-value>
    </os:retrieve>
    <salesforce:query config-ref="Salesforce_Sfdc_A_config" doc:name="Query Opportunities with filtering criteria from Salesforce Instance A">
		<salesforce:salesforce-query>SELECT LastModifiedDate, Name, Amount, StageName, Probability, CloseDate, Type, Account.Id, Account.Name, Account.AccountNumber, Account.AccountSource, Account.AnnualRevenue, Account.BillingCity, Account.BillingCountry, Account.BillingPostalCode, Account.BillingState, Account.BillingStreet, Account.Description, Account.Fax, Account.Industry, Account.NumberOfEmployees, Account.Ownership, Account.ParentId, Account.Phone, Account.Rating, Account.ShippingCity, Account.ShippingCountry, Account.ShippingPostalCode, Account.ShippingState, Account.ShippingStreet, Account.Sic, Account.SicDesc, Account.Site, Account.TickerSymbol, Account.Type, Account.Website FROM Opportunity WHERE LastModifiedDate &gt; :lastModifiedDate AND Amount &gt; 5000</salesforce:salesforce-query>
		<salesforce:parameters><![CDATA[#[output applicaton/java
---
{
	"lastModifiedDate" : vars.lastQueryTimestamp
}]]]></salesforce:parameters>
    
</salesforce:query>
    <os:store key="watermark" failIfPresent="false" failOnNullValue="false" objectStore="watermarkStore" doc:name="Store lastQueryTimestamp">
        <os:value>#[max(payload map $.LastModifiedDate)]</os:value>
    </os:store>
</flow>
	<flow name="businessLogicFlow" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67" >
		<batch:job jobName="broadcastOpportunitiesBatch" doc:id="204892ae-0d97-4326-beae-310c8d52b7a6" blockSize="${page.size}">
			<batch:process-records>
				<batch:step name="GetOpportunityInBStep" doc:id="b277c4d3-8ec1-4941-96be-e6fb9a8e2d9f" >
					<salesforce:query-single config-ref="Salesforce_Sfdc_B_config" doc:name="Query Opportunity in Salesforce Instance B" doc:id="e828fbe5-8917-4833-a479-8df69b560884" target="IdInB">
						<salesforce:salesforce-query>SELECT Id FROM Opportunity WHERE Name = ':name'</salesforce:salesforce-query>
						<salesforce:parameters><![CDATA[#[output applicaton/java
---
{
	"name" : payload.Name
}]]]></salesforce:parameters>
					</salesforce:query-single>
					<ee:transform doc:name="Enrich Payload with IdInB" doc:id="c119f87d-9095-4962-b961-efe507b06a0c">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ vars.IdInB]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				
</batch:step>
				<batch:step name="findOrCreateAccountInBStep" doc:id="89713774-362a-4e92-9bdc-41e31802bf38" acceptExpression="#['syncAccount' == '${account.sync.policy}']">
					<choice doc:name="Is account set in A?" doc:id="c9e31f66-c1da-4351-b0f1-ea1e99c6eeaf">
						<when expression="#[payload.Account != null]">
							<salesforce:query-single doc:name="Query Account in  Salesforce Instance B" doc:id="0f546a41-65be-483a-8e43-eb7d0cf48980" config-ref="Salesforce_Sfdc_B_config" target="accountInB">
								<salesforce:salesforce-query>SELECT Id FROM Account WHERE Name = ':accountName'</salesforce:salesforce-query>
								<salesforce:parameters><![CDATA[#[output applicaton/java
---
{
	"accountName" : payload.Account.Name
}]]]></salesforce:parameters>
							</salesforce:query-single>
							<choice doc:name="Does account need to be created?" doc:id="d2ecfa6c-a003-48c1-b4dc-02b75e00226f">
								<when expression="#[vars.accountInB.Id == null]">
									<ee:transform doc:name="Prepare Account data" doc:id="e344bc0f-ee19-4f71-8f3d-74b936ffa2ce">
										<ee:message>
										</ee:message>
										<ee:variables >
											<ee:set-variable variableName="newAccountPayload" ><![CDATA[%dw 2.0
output application/java
---
[payload.Account
- "Id"
++ ("NumberOfEmployees": payload.Account.NumberOfEmployees as Number {class: "java.lang.Integer"} default 0)
]]]></ee:set-variable>
										</ee:variables>
									
</ee:transform>
									<salesforce:create type="Account" doc:name="Create Account in Salesforce Instance B" doc:id="8a47cb94-0020-41cb-9c07-be0871728cc3" config-ref="Salesforce_Sfdc_B_config" target="newAccountInB" >
										<salesforce:records ><![CDATA[#[vars.newAccountPayload]]]></salesforce:records>
									</salesforce:create>
									<ee:transform doc:name="Enrich Payload with Account ID" doc:id="c119f87d-9095-4962-b961-efe507b06a0c">
										<ee:message>
											<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++
{
	AccountId: vars.newAccountInB[0].Id
}]]></ee:set-payload>
										</ee:message>
									</ee:transform>
								
</when>
								<otherwise>
									<ee:transform doc:name="Enrich Payload with Account ID" doc:id="c119f87d-9095-4962-b961-efe507b06a0c">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ 
{
	AccountId: vars.accountInB.Id
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
								</otherwise>
							</choice>
						
</when>
						<otherwise>
							<logger level="INFO" doc:name="Logger" doc:id="01dd3c04-d0b5-48a3-8db6-940cda87cdca" message="There is no Account assigned to this Opportunity." />
						</otherwise>
					</choice>


				</batch:step>
				<batch:step name="UpsertOpportunityInBStep" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="1ad86a98-643e-494a-a90a-32daab0b03cc" size="${page.size}">
						<ee:transform doc:name="Prepare Opportunity data" doc:id="d484063f-6d81-42ce-98ef-7cec51b04672">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map {
($ - "LastModifiedDate"
 - "Account"
++ ("Amount": $.Amount as Number {class: "java.lang.Double"} default 0)
++ ("CloseDate": $.CloseDate as Date) if ($.CloseDate != null))
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Log Opportunities to update/create" doc:id="d940f154-2b53-4df1-9962-306ffe8883f7" message="#['Opportunities to update/create: ' ++ write(payload, 'application/json', {'indent': 'false'})]"/>
						<salesforce:upsert-bulk config-ref="Salesforce_Sfdc_B_config" type="Opportunity" externalIdFieldName="Id" doc:name="Upsert Opportunities in Salesforce Instance B" doc:id="26dee78b-3cbd-41d7-a260-538058420b0e" />
					
</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<ee:transform doc:name="Prepare migration result" doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
"Migration Report: \n"
 
++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis
++ "\n Total Records: "				++ payload.totalRecords
++ "\n Successful Records: "		++ payload.successfulRecords
++ "\n Failed Records: "			++ payload.failedRecords
++ "\n Loaded Records: "			++ payload.loadedRecords
++ "\n Processed Records: " 		++ payload.processedRecords]]></ee:set-payload>
							</ee:message>
						</ee:transform>
				<logger level="INFO" doc:name="Migration process has finished!" doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="#[payload]" />

			</batch:on-complete>
		
</batch:job>
	</flow>
</mule>